#!/usr/bin/env ruby

require 'compass'

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.
#

Compass.add_project_configuration 'compass.rb'

compile '/assets/humans/' do
end

compile '/assets/robots/' do
end

compile '/assets/scss/*' do
  filter :sass, Compass.sass_engine_options.merge(:syntax => item[:extension].to_sym)
end

compile '/assets/js/*' do
end
compile '/assets/img/*' do
end

compile '*' do
  if item[:extension] == 'css'
    # don’t filter stylesheets
  elsif item.binary?
    # don’t filter binary items
  else
   filter :mustache
    layout 'article'
  end
end

route '/assets/humans/' do
  '/humans.txt' 
end

route '/assets/robots/' do
  '/robots.txt' 
end

route '/assets/scss/*' do
  '/css/' + File.basename(item.identifier) + '.css'
end

route '/assets/img/*' do
  '/layout_img/' + File.basename(item.identifier) + '.' + item[:extension]
end

route '/assets/js/*' do
  '/js/' + File.basename(item.identifier) + '.js'
end

route '/assets/bower/*' do
  '/bower_components' + item.identifier.chop + '.' + item[:extension]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end


layout '*', :mustache
